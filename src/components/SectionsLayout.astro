---
interface Props {}

const {} = Astro.props;

import Home from "../components/Home.astro";
import Curant from "../components/Curant.astro";
import PaymentForms from "../components/PaymentForms.astro";
import WidgetLibrary from "../components/WidgetLibrary.astro";
import Contact from "../components/Contact.astro";
---

<div id="projects-wrapper">
  <div id="home" class="in-view">
    <Home />
  </div>
  <div class="in-view project-layout" id="productatcurant">
    <Curant />
  </div>
  <div class="in-view project-layout" id="paymentforms">
    <PaymentForms />
  </div>
  <div class="in-view project-layout" id="widgetlibrary">
    <WidgetLibrary />
  </div>
  <!-- <div class="in-view project-layout" id="cats"><Cats /></div> -->
  <div id="contact" class="in-view">
    <Contact />
  </div>
  <div id="background-fish-wrapper">
    <img id="background-fish" src="/fish-circle.svg" />
  </div>
</div>

<style is:global>
  /* wrapper stylings  */

  #projects-wrapper {
    flex: 3;
    min-width: 0px;
    height: 100vh;
    overflow-y: auto;
  }

  .project-layout {
    width: 100%;
    display: flex;
    flex-direction: column;
    padding: 80px 80px 200px 80px;
    @media only screen and (max-width: 600px) {
      padding: 40px;
    }
  }

  /* project stylings  */

  .in-view {
    max-width: 1600px;
  }

  .project-wrapper {
    display: flex;
    width: 100%;
    flex-direction: column;
    gap: 60px;
  }

  .section-container {
    width: 100%;
    display: flex;
    flex-direction: row;
    gap: 40px;
    @media only screen and (max-width: 660px) {
      flex-direction: column;
      gap: 20px;
    }
  }

  .project-description {
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 16px;
  }

  .section-header {
    width: 240px;
    @media only screen and (max-width: 600px) {
      width: 100%;
    }
  }

  .section-header h2 {
    font-family: "freight-macro-pro", system-ui, sans-serif;
  }

  .section-content {
    margin-top: 8px;
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 20px;
  }

  .section-wrapper {
    display: flex;
    width: 100%;
    gap: 40px;
    flex-wrap: nowrap;
    @media only screen and (max-width: 660px) {
      gap: 20px;
    }
    @media only screen and (max-width: 1000px) {
      flex-wrap: wrap;
    }
  }

  .section-wrapper-no-responsive {
    display: flex;
    width: 100%;
    gap: 20px;
    margin-top: 20px;
    flex-wrap: nowrap;
    justify-content: space-between;
  }

  .image-wrapper {
    margin: 40px 0;
    justify-content: space-evenly;
  }

  .half {
    width: 47%;

    @media only screen and (max-width: 1000px) {
      width: 100%;
    }
  }

  .three-fourths {
    width: 70%;

    @media only screen and (max-width: 1000px) {
      width: 100%;
    }
  }

  .fourth {
    width: 25%;

    @media only screen and (max-width: 1000px) {
      width: 100%;
    }
  }

  .third {
    width: 30%;
    @media only screen and (max-width: 1000px) {
      width: 100%;
    }
  }

  .half-no-responsive {
    width: 45%;
  }

  .project-image {
    width: 100%;
    height: auto;
  }

  .text-wrapper {
    width: 75%;
    @media only screen and (max-width: 660px) {
      width: 100%;
    }
  }

  .no-break {
    white-space: nowrap;
  }

  .responsive-center {
    @media only screen and (max-width: 1000px) {
      justify-content: space-evenly;
    }
  }

  .link-styling {
    font-weight: 400;
    margin: -1px -8px;
    border-width: 1px 8px;
    border-style: solid;
    border-color: transparent;

    &:hover {
      font-weight: 500;
      background-color: #dbeef7;
      z-index: -999;
    }
  }

  .caption-wrapper {
    display: flex;
    align-items: center;
    color: #959595;
    flex-wrap: nowrap;
  }

  .caption {
    margin: 4px 0;
    color: #959595;
  }

  .icon {
    width: 12px;
  }
</style>

<script>
  const projectsWrapper = document.getElementById(
    "projects-wrapper"
  ) as HTMLElement;

  const backgroundFish = document.getElementById(
    "background-fish"
  ) as HTMLImageElement;

  let fish = {
    rotation: 0,
  };
  let lastScrollTop = 0;

  projectsWrapper.addEventListener("scroll", (event) => {
    let st = window.pageYOffset || projectsWrapper.scrollTop;
    if (st > lastScrollTop) {
      // downscroll code
      fish.rotation -= 0.2;
    } else {
      // upscroll code
      fish.rotation += 0.2;
    }
    lastScrollTop = st <= 0 ? 0 : st; // For Mobile or negative scrolling
    backgroundFish.style.transform = "rotate(" + fish.rotation + "deg)";
  });
</script>
